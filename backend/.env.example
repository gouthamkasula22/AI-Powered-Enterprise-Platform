# Database Configuration - matches existing docker-compose.yml
DATABASE_URL=postgresql+asyncpg://auth_user:auth_password@localhost:5433/auth_db
DB_HOST=localhost
DB_PORT=5433
DB_NAME=auth_db
DB_USER=auth_user
DB_PASSWORD=auth_password

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# JWT Configuration - CHANGE THESE IN PRODUCTION!
JWT_SECRET_KEY=CHANGE_THIS_TO_A_SECURE_SECRET_KEY_AT_LEAST_32_CHARACTERS_LONG
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# OAuth Configuration (Optional) - REPLACE WITH YOUR REAL CREDENTIALS
GOOGLE_CLIENT_ID=your-google-client-id-from-google-console
GOOGLE_CLIENT_SECRET=your-google-client-secret-from-google-console
GITHUB_CLIENT_ID=your-github-client-id-from-github-oauth-app
GITHUB_CLIENT_SECRET=your-github-client-secret-from-github-oauth-app

# Email Configuration (Optional) - REPLACE WITH YOUR REAL CREDENTIALS
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password-or-smtp-password
FROM_EMAIL=your-email@gmail.com

# Application Configuration
DEBUG=True
ENVIRONMENT=development
LOG_LEVEL=INFO
FRONTEND_URL=http://localhost:3000

# Security Configuration
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Rate Limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW_MINUTES=1