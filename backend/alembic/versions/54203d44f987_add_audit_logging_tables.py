"""Add audit logging tables

Revision ID: 54203d44f987
Revises: 0b9bfbacf32b
Create Date: 2025-09-12 03:29:19.034119

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '54203d44f987'
down_revision = '0b9bfbacf32b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blacklist_blacklisted_at'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_created_at'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_expires_at'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_id'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_token_jti'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_user_blacklisted'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_user_id'))

    op.drop_table('token_blacklist')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_blacklist',
    sa.Column('token_jti', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('blacklisted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('token_blacklist_pkey'))
    )
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blacklist_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blacklist_user_blacklisted'), ['user_id', 'blacklisted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blacklist_token_jti'), ['token_jti'], unique=True)
        batch_op.create_index(batch_op.f('ix_token_blacklist_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_token_blacklist_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blacklist_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blacklist_blacklisted_at'), ['blacklisted_at'], unique=False)

    # ### end Alembic commands ###
