"""add_message_processing_tables

Revision ID: c844096120f8
Revises: 5615e4ee311c
Create Date: 2025-09-23 22:42:31.331414

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c844096120f8'
down_revision = '5615e4ee311c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_processing_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('stage', sa.String(length=50), nullable=False),
    sa.Column('step_name', sa.String(length=100), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ai_processing_steps', schema=None) as batch_op:
        batch_op.create_index('idx_ai_processing_steps_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_ai_processing_steps_stage', ['stage'], unique=False)
        batch_op.create_index('idx_ai_processing_steps_status', ['message_id', 'stage', 'completed_at'], unique=False)
        batch_op.create_index('idx_ai_processing_steps_timing', ['started_at', 'completed_at'], unique=False)

    op.create_table('message_edits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('edit_type', sa.String(length=50), nullable=False),
    sa.Column('old_content', sa.Text(), nullable=False),
    sa.Column('new_content', sa.Text(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('message_edits', schema=None) as batch_op:
        batch_op.create_index('idx_message_edits_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_message_edits_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_message_edits_type', ['edit_type'], unique=False)
        batch_op.create_index('idx_message_edits_user_id', ['user_id'], unique=False)

    op.create_table('message_reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reaction_type', sa.String(length=50), nullable=False),
    sa.Column('custom_emoji', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('message_reactions', schema=None) as batch_op:
        batch_op.create_index('idx_message_reactions_composite', ['message_id', 'user_id', 'reaction_type'], unique=False)
        batch_op.create_index('idx_message_reactions_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_message_reactions_type', ['reaction_type'], unique=False)
        batch_op.create_index('idx_message_reactions_user_id', ['user_id'], unique=False)

    op.create_table('message_search_indexes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('content_vector', sa.Text(), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('topics', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('entities', sa.JSON(), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('indexed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id')
    )
    with op.batch_alter_table('message_search_indexes', schema=None) as batch_op:
        batch_op.create_index('idx_message_search_indexed_at', ['indexed_at'], unique=False)
        batch_op.create_index('idx_message_search_keywords', ['keywords'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_message_search_language', ['language'], unique=False)
        batch_op.create_index('idx_message_search_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_message_search_sentiment', ['sentiment_score'], unique=False)
        batch_op.create_index('idx_message_search_topics', ['topics'], unique=False, postgresql_using='gin')

    op.create_table('message_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('version_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('message_versions', schema=None) as batch_op:
        batch_op.create_index('idx_message_versions_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_message_versions_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_message_versions_version', ['message_id', 'version_number'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('message_versions', schema=None) as batch_op:
        batch_op.drop_index('idx_message_versions_version')
        batch_op.drop_index('idx_message_versions_message_id')
        batch_op.drop_index('idx_message_versions_created_at')

    op.drop_table('message_versions')
    with op.batch_alter_table('message_search_indexes', schema=None) as batch_op:
        batch_op.drop_index('idx_message_search_topics', postgresql_using='gin')
        batch_op.drop_index('idx_message_search_sentiment')
        batch_op.drop_index('idx_message_search_message_id')
        batch_op.drop_index('idx_message_search_language')
        batch_op.drop_index('idx_message_search_keywords', postgresql_using='gin')
        batch_op.drop_index('idx_message_search_indexed_at')

    op.drop_table('message_search_indexes')
    with op.batch_alter_table('message_reactions', schema=None) as batch_op:
        batch_op.drop_index('idx_message_reactions_user_id')
        batch_op.drop_index('idx_message_reactions_type')
        batch_op.drop_index('idx_message_reactions_message_id')
        batch_op.drop_index('idx_message_reactions_composite')

    op.drop_table('message_reactions')
    with op.batch_alter_table('message_edits', schema=None) as batch_op:
        batch_op.drop_index('idx_message_edits_user_id')
        batch_op.drop_index('idx_message_edits_type')
        batch_op.drop_index('idx_message_edits_message_id')
        batch_op.drop_index('idx_message_edits_created_at')

    op.drop_table('message_edits')
    with op.batch_alter_table('ai_processing_steps', schema=None) as batch_op:
        batch_op.drop_index('idx_ai_processing_steps_timing')
        batch_op.drop_index('idx_ai_processing_steps_status')
        batch_op.drop_index('idx_ai_processing_steps_stage')
        batch_op.drop_index('idx_ai_processing_steps_message_id')

    op.drop_table('ai_processing_steps')
    # ### end Alembic commands ###
