"""add_chat_authentication_tables

Revision ID: fc78da45f18c
Revises: c844096120f8
Create Date: 2025-09-23 23:04:45.775993

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc78da45f18c'
down_revision = 'c844096120f8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_rate_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('window_start', sa.DateTime(), nullable=False),
    sa.Column('window_duration_minutes', sa.Integer(), nullable=False),
    sa.Column('limit_per_window', sa.Integer(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('blocked_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_rate_limits', schema=None) as batch_op:
        batch_op.create_index('idx_chat_rate_limits_blocked', ['is_blocked', 'blocked_until'], unique=False)
        batch_op.create_index('idx_chat_rate_limits_updated', ['updated_at'], unique=False)
        batch_op.create_index('idx_chat_rate_limits_user_action', ['user_id', 'action_type'], unique=False)
        batch_op.create_index('idx_chat_rate_limits_window', ['window_start', 'window_duration_minutes'], unique=False)

    op.create_table('user_chat_isolation',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('isolation_level', sa.String(length=20), nullable=False),
    sa.Column('allowed_thread_ids', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('blocked_user_ids', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('content_filters', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('max_threads', sa.Integer(), nullable=True),
    sa.Column('max_messages_per_hour', sa.Integer(), nullable=True),
    sa.Column('allowed_file_types', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('restrictions', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('user_chat_isolation', schema=None) as batch_op:
        batch_op.create_index('idx_user_chat_isolation_allowed_threads', ['allowed_thread_ids'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_user_chat_isolation_blocked_users', ['blocked_user_ids'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_user_chat_isolation_level', ['isolation_level'], unique=False)
        batch_op.create_index('idx_user_chat_isolation_updated', ['updated_at'], unique=False)

    op.create_table('chat_user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=True),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['thread_id'], ['chat_threads.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_user_roles', schema=None) as batch_op:
        batch_op.create_index('idx_chat_user_roles_active', ['is_active', 'expires_at'], unique=False)
        batch_op.create_index('idx_chat_user_roles_role', ['role'], unique=False)
        batch_op.create_index('idx_chat_user_roles_thread_id', ['thread_id'], unique=False)
        batch_op.create_index('idx_chat_user_roles_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_chat_user_roles_user_thread', ['user_id', 'thread_id'], unique=False)

    op.create_table('thread_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('granted_by', sa.Integer(), nullable=False),
    sa.Column('access_level', sa.String(length=20), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['thread_id'], ['chat_threads.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('thread_access', schema=None) as batch_op:
        batch_op.create_index('idx_thread_access_expires', ['expires_at'], unique=False)
        batch_op.create_index('idx_thread_access_level', ['access_level'], unique=False)
        batch_op.create_index('idx_thread_access_thread_id', ['thread_id'], unique=False)
        batch_op.create_index('idx_thread_access_thread_user', ['thread_id', 'user_id'], unique=False)
        batch_op.create_index('idx_thread_access_user_id', ['user_id'], unique=False)

    op.create_table('chat_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('thread_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('additional_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['thread_id'], ['chat_threads.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_chat_audit_logs_action', ['action'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_entity', ['entity_type', 'entity_id'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_message_id', ['message_id'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_session', ['session_id'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_thread_id', ['thread_id'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_user_action', ['user_id', 'action', 'created_at'], unique=False)
        batch_op.create_index('idx_chat_audit_logs_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('chat_audit_logs', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_audit_logs_user_id')
        batch_op.drop_index('idx_chat_audit_logs_user_action')
        batch_op.drop_index('idx_chat_audit_logs_thread_id')
        batch_op.drop_index('idx_chat_audit_logs_session')
        batch_op.drop_index('idx_chat_audit_logs_message_id')
        batch_op.drop_index('idx_chat_audit_logs_entity')
        batch_op.drop_index('idx_chat_audit_logs_created_at')
        batch_op.drop_index('idx_chat_audit_logs_action')

    op.drop_table('chat_audit_logs')
    with op.batch_alter_table('thread_access', schema=None) as batch_op:
        batch_op.drop_index('idx_thread_access_user_id')
        batch_op.drop_index('idx_thread_access_thread_user')
        batch_op.drop_index('idx_thread_access_thread_id')
        batch_op.drop_index('idx_thread_access_level')
        batch_op.drop_index('idx_thread_access_expires')

    op.drop_table('thread_access')
    with op.batch_alter_table('chat_user_roles', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_user_roles_user_thread')
        batch_op.drop_index('idx_chat_user_roles_user_id')
        batch_op.drop_index('idx_chat_user_roles_thread_id')
        batch_op.drop_index('idx_chat_user_roles_role')
        batch_op.drop_index('idx_chat_user_roles_active')

    op.drop_table('chat_user_roles')
    with op.batch_alter_table('user_chat_isolation', schema=None) as batch_op:
        batch_op.drop_index('idx_user_chat_isolation_updated')
        batch_op.drop_index('idx_user_chat_isolation_level')
        batch_op.drop_index('idx_user_chat_isolation_blocked_users', postgresql_using='gin')
        batch_op.drop_index('idx_user_chat_isolation_allowed_threads', postgresql_using='gin')

    op.drop_table('user_chat_isolation')
    with op.batch_alter_table('chat_rate_limits', schema=None) as batch_op:
        batch_op.drop_index('idx_chat_rate_limits_window')
        batch_op.drop_index('idx_chat_rate_limits_user_action')
        batch_op.drop_index('idx_chat_rate_limits_updated')
        batch_op.drop_index('idx_chat_rate_limits_blocked')

    op.drop_table('chat_rate_limits')
    # ### end Alembic commands ###
