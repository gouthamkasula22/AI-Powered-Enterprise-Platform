"""add_all_user_model_fields_production_ready

Revision ID: 3200e83c8ec5
Revises: 053765c1e5b0
Create Date: 2025-09-10 00:37:49.111811

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3200e83c8ec5'
down_revision = '053765c1e5b0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('first_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('display_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('profile_picture_url', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('bio', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('email_verification_token', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('email_verification_expires', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('is_staff', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('is_superuser', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('last_login_ip', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('failed_login_attempts', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('password_reset_token', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('login_count', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('email_notifications', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('marketing_emails', sa.Boolean(), nullable=False))
        batch_op.create_index('ix_users_active_verified', ['is_active', 'is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email_verification_token'), ['email_verification_token'], unique=False)
        batch_op.create_index('ix_users_email_verified', ['email', 'is_verified'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_staff'), ['is_staff'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_superuser'), ['is_superuser'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_is_verified'), ['is_verified'], unique=False)
        batch_op.create_index('ix_users_last_activity', ['last_activity'], unique=False)
        batch_op.create_index('ix_users_last_login', ['last_login'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_password_reset_token'), ['password_reset_token'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_password_reset_token'))
        batch_op.drop_index('ix_users_last_login')
        batch_op.drop_index('ix_users_last_activity')
        batch_op.drop_index(batch_op.f('ix_users_is_verified'))
        batch_op.drop_index(batch_op.f('ix_users_is_superuser'))
        batch_op.drop_index(batch_op.f('ix_users_is_staff'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index('ix_users_email_verified')
        batch_op.drop_index(batch_op.f('ix_users_email_verification_token'))
        batch_op.drop_index('ix_users_active_verified')
        batch_op.drop_column('marketing_emails')
        batch_op.drop_column('email_notifications')
        batch_op.drop_column('login_count')
        batch_op.drop_column('last_activity')
        batch_op.drop_column('password_reset_expires')
        batch_op.drop_column('password_reset_token')
        batch_op.drop_column('password_changed_at')
        batch_op.drop_column('account_locked_until')
        batch_op.drop_column('failed_login_attempts')
        batch_op.drop_column('last_login_ip')
        batch_op.drop_column('last_login')
        batch_op.drop_column('is_superuser')
        batch_op.drop_column('is_staff')
        batch_op.drop_column('email_verification_expires')
        batch_op.drop_column('email_verification_token')
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_active')
        batch_op.drop_column('date_of_birth')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('bio')
        batch_op.drop_column('profile_picture_url')
        batch_op.drop_column('display_name')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('username')

    # ### end Alembic commands ###
